1. Авторизация настраивается в ./conf/config.json объект users - это массив объектов пользователей,
состоящий из пары свойств - имя пользователя и его пароль.
{
    "name": "map1",
    "pass": "pass1"
},
причём значение имени есть путь к карте проекта, к которому у этого пользователя есть доступ (см.п.2).

2. Шаблон основной страницы портала - ./views/index.ejs. Каждый проект размещённый на портале оформляется блоком 
<div class="project-container">. В теге <a href="/mapХХХ" class="tip"> "mapXХХ" должен соответствовать имени пользователя
которому предоставляется доступ на этот проект.
Для каждого нового проекта необходимо прписать маршрут в ./routes/auth.js
Пример для map3:
/*роут на map3*/
    app.get('/map3', function (req, res) {
        if (req.isAuthenticated() && req.path === '/'+req.user.username) {
            res.render('maps/'+req.user.username+'.ejs');
            return;
        }     
           
        res.redirect('/auth');
    });

3. Шаблоны страниц каждого конкретного проекта располагаются в ./views/maps/ и должны быть основаны на mapLayout.ejs. 
Например, ./views/maps/map1.ejs. В этом конкретном случае, первым подключается скрипт с настройкой содержания карты 
<script src="/js/confs/layersTree/layersTree1.js"></script>

4. Содержание карты оформляется в виде JSON-файлаов в ./public/js/confs/layersTree/. Массив data содержит описания каждого
проекта - верхний уровень дерева слоёв.

var _layersTreeConfiguration = {
	data: [{
		/*ТИС*/
		text: 'ТИС',
		type: 'road',
		state: {
			opened: true
		},		
		children: [{
			text: 'Административное деление',
			type: 'complex',
			state: {
				opened: true
			},
			children: [{
				text: 'Административно-территориальное деление',
				layerInfo: {
					displayName: 'Административно-территориальное деление',
					url: 'http://91.210.186.81:8181/geoserver/tis/wms?',
					layers: 'tis:admin_class',
					version: '1.1.1',
					srs: 'EPSG:3857',
					visible: true,
					opacity: 100,
					legend: true,
					serviceFormat: 'wms',
					isBaseLayer: false,
					aliases: [{
						field: 'calc_area',
						alias: 'Площадь'
					}, {
						field: 'adm_name',
						alias: 'Наименование'
					}, {
						field: 'cad_num',
						alias: 'Кадастровый номер'
					}]
				},
				type: 'layer'
			}, {
				text: 'Дорожно-транспортная сеть',
				layerInfo: {
					displayName: 'Дорожно-транспортная сеть',
					url: 'http://91.210.186.81:8181/geoserver/tis/wms?',
					layers: 'tis:all_roads',
					version: '1.3.0',
					srs: 'EPSG:3857',
					visible: true,
					opacity: 100,
					legend: true,
					serviceFormat: 'wms',
					isBaseLayer: false,
					imgField: 'id'
				},
				type: 'layer'
			}, {
				text: 'Границы населенных пунктов',
				layerInfo: {
					displayName: 'Границы населенных пунктов',
					url: 'http://91.210.186.81:8181/geoserver/tis/wms?',
					layers: 'tis:settlements',
					version: '1.3.0',
					srs: 'EPSG:3857',
					visible: true,
					opacity: 100,
					legend: true,
					serviceFormat: 'wms',
					isBaseLayer: false
				},
				type: 'layer'
			}]
		}, {
			text: 'Росреестр1',
			type: 'complex',
			state: {
				opened: true
			},
			children: [{
				text: 'Кадастр недвижимости',
				layerInfo: {
					displayName: 'Кадастр недвижимости',
					url: 'http://maps.rosreestr.ru/arcgis/services/Cadastre/CadastreWMS/MapServer/WMSServer',
					layers: '0,1,2,3', // имена слоёв задаются на ПКК цифрами
					version: '1.1.1',
					srs: 'EPSG:3857',
					visible: true,
					opacity: 100,
					legend: false,
					serviceFormat: 'wmscad',
					isBaseLayer: false
				},
				type: 'layer'
			}]
		}]
	}],
	types: {
		layer: {
			icon: 'glyphicon glyphicon-tasks color-blue'
		},
		road: {
			icon: 'glyphicon glyphicon-road color-hard-blue'
		},
		complex: {
			icon: 'glyphicon glyphicon-folder-close color-middle-blue'
		}
	}
};

Получение изображений.
Для получения изображения используется параметр из запроса по адресу /images. Параметр ?getimg=имя.файла. 
Например, /images?getimg=foto.jpg
Для хранения изображений используется директория ./image-store/
В случае с именем запрашиваемого файла foto.jpg, он должен находиться по пути ./image-store/foto.jpg.
Для автоматической связки изображений в ./image-store/ и объектов в БД у каждого объекта в тектовом поле, например, 
"photo", должно быть имя изображения относительно папки ./image-store/. А в настройках слоя layerInfo
необходимо указать imgField: 'photo'


